
--TABLA: products -- Almacena pupusas y adicionales con precios -- ============================================ 
CREATE TABLE products ( id SERIAL PRIMARY KEY, name TEXT NOT NULL, masa TEXT CHECK (masa IN ('ma√≠z', 'arroz') OR masa IS NULL), price NUMERIC(10,2) NOT NULL CHECK (price >= 0), is_small BOOLEAN DEFAULT FALSE, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP );
-- ============================================ -- TABLA: orders -- Registra pedidos por d√≠a de negocio -- ============================================ 
CREATE TABLE orders ( id SERIAL PRIMARY KEY, business_day DATE NOT NULL, is_delivery BOOLEAN DEFAULT FALSE, delivery_cost NUMERIC(10,2) DEFAULT 0 CHECK (delivery_cost >= 0), total NUMERIC(10,2) NOT NULL CHECK (total >= 0), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ); 
-- ============================================ -- TABLA: order_items -- Detalle de productos por pedido -- ============================================ 
CREATE TABLE order_items ( id SERIAL PRIMARY KEY, order_id INTEGER NOT NULL REFERENCES orders(id) ON DELETE CASCADE, product_id INTEGER NOT NULL REFERENCES products(id) ON DELETE RESTRICT, masa TEXT NOT NULL CHECK (masa IN ('ma√≠z', 'arroz')), quantity INTEGER NOT NULL CHECK (quantity > 0), unit_price NUMERIC(10,2) NOT NULL CHECK (unit_price >= 0), line_total NUMERIC(10,2) NOT NULL CHECK (line_total >= 0) ); 
-- ============================================ -- TABLA: open_days -- Control de d√≠as abiertos/cerrados -- ============================================ 
CREATE TABLE open_days ( id SERIAL PRIMARY KEY, date DATE NOT NULL UNIQUE, is_open BOOLEAN NOT NULL DEFAULT TRUE ); 
-- ============================================ -- √çNDICES para optimizaci√≥n -- ============================================ 
CREATE INDEX idx_orders_business_day ON orders(business_day); CREATE INDEX idx_order_items_order_id ON order_items(order_id); CREATE INDEX idx_order_items_product_id ON order_items(product_id); CREATE INDEX idx_open_days_date ON open_days(date); 
-- ============================================ -- SEED: Productos base -- ============================================ -- Pupusas grandes (precio normal)
INSERT INTO products (name, masa, price, is_small) VALUES ('Revueltas', 'ma√≠z', 0.65, FALSE), ('Revueltas', 'arroz', 0.65, FALSE), ('Frijol con queso', 'ma√≠z', 0.65, FALSE), ('Frijol con queso', 'arroz', 0.65, FALSE), ('Queso', 'ma√≠z', 0.75, FALSE), ('Queso', 'arroz', 0.75, FALSE), ('Chicharr√≥n', 'ma√≠z', 0.85, FALSE), ('Chicharr√≥n', 'arroz', 0.85, FALSE), ('Frijol', 'ma√≠z', 0.40, FALSE), ('Frijol', 'arroz', 0.40, FALSE), ('Mora', 'ma√≠z', 0.70, FALSE), ('Mora', 'arroz', 0.70, FALSE), ('Ayote', 'ma√≠z', 0.70, FALSE), ('Ayote', 'arroz', 0.70, FALSE), ('Chicharr√≥n con queso', 'ma√≠z', 0.75, FALSE), ('Chicharr√≥n con queso', 'arroz', 0.75, FALSE), ('Queso con loroco', 'ma√≠z', 0.75, FALSE), ('Queso con loroco', 'arroz', 0.75, FALSE), ('Jam√≥n', 'ma√≠z', 0.85, FALSE), ('Jam√≥n', 'arroz', 0.85, FALSE), ('Pollo', 'ma√≠z', 1.00, FALSE), ('Pollo', 'arroz', 1.00, FALSE); -- Pupusas peque√±as (promoci√≥n 3x1$) INSERT INTO products (name, masa, price, is_small) VALUES ('Revueltas Peque√±as', 'ma√≠z', 0.65, TRUE), ('Revueltas Peque√±as', 'arroz', 0.65, TRUE), ('Frijol con queso Peque√±as', 'ma√≠z', 0.65, TRUE), ('Frijol con queso Peque√±as', 'arroz', 0.65, TRUE);
-- ============================================ -- SEED: D√≠as de muestra (√∫ltimos 7 d√≠as abiertos) -- ============================================ 
INSERT INTO open_days (date, is_open) VALUES (CURRENT_DATE, TRUE), (CURRENT_DATE - INTERVAL '1 day', TRUE), (CURRENT_DATE - INTERVAL '2 days', TRUE), (CURRENT_DATE - INTERVAL '3 days', TRUE), (CURRENT_DATE - INTERVAL '4 days', TRUE), (CURRENT_DATE - INTERVAL '5 days', TRUE), (CURRENT_DATE - INTERVAL '6 days', TRUE); 
-- ============================================ -- VERIFICACI√ìN: Mostrar productos insertados -- ============================================ 
SELECT id, name, masa, price, CASE WHEN is_small THEN '3x1$' ELSE 'Normal' END as tipo FROM products ORDER BY is_small, name, masa; -- ============================================ -- MENSAJE DE CONFIRMACI√ìN -- ============================================ 
DO $$ BEGIN RAISE NOTICE '‚úÖ Base de datos inicializada correctamente'; RAISE NOTICE 'üì¶ % productos insertados', (SELECT COUNT(*) FROM products); RAISE NOTICE 'üìÖ % d√≠as de muestra creados', (SELECT COUNT(*) FROM open_days); END $$;
SELECT * FROM products;
